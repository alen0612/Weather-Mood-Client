[{"C:\\Users\\User\\Desktop\\weather\\src\\index.js":"1","C:\\Users\\User\\Desktop\\weather\\src\\App.js":"2","C:\\Users\\User\\Desktop\\weather\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Forecast.js":"4","C:\\Users\\User\\Desktop\\weather\\src\\Components\\Mynavbar.js":"5","C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Today.js":"6","C:\\Users\\User\\Desktop\\weather\\src\\Components\\TodayInfo.js":"7","C:\\Users\\User\\Desktop\\weather\\src\\Components\\Loading.js":"8","C:\\Users\\User\\Desktop\\weather\\src\\Components\\PostBar.js":"9","C:\\Users\\User\\Desktop\\weather\\src\\Components\\Searchbar.js":"10","C:\\Users\\User\\Desktop\\weather\\src\\Components\\WeatherMood.js":"11","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\index.js":"12","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\reportWebVitals.js":"13","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\App.js":"14","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Mynavbar.js":"15","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Today.js":"16","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Forecast.js":"17","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Searchbar.js":"18","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Loading.js":"19","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\PostBar.js":"20","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\TodayInfo.js":"21","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\WeatherMood.js":"22","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignIn.js":"23","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignUp.js":"24","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\helpers\\AuthContext.js":"25","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\index.js":"26","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\App.js":"27","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\reportWebVitals.js":"28","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\SignIn.js":"29","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Pages\\Today.js":"30","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\Mynavbar.js":"31","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Pages\\Forecast.js":"32","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\SignUp.js":"33","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\helpers\\AuthContext.js":"34","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\Searchbar.js":"35","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\Loading.js":"36","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\TodayInfo.js":"37","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\PostBar.js":"38","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\WeatherMood.js":"39"},{"size":478,"mtime":1646558344629,"results":"40","hashOfConfig":"41"},{"size":8291,"mtime":1646681816944,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":4267,"mtime":1646681859130,"results":"44","hashOfConfig":"41"},{"size":1675,"mtime":1646569194020,"results":"45","hashOfConfig":"41"},{"size":901,"mtime":1646674626030,"results":"46","hashOfConfig":"41"},{"size":395,"mtime":1646571494473,"results":"47","hashOfConfig":"41"},{"size":432,"mtime":1646719780901,"results":"48","hashOfConfig":"41"},{"size":4765,"mtime":1646841846851,"results":"49","hashOfConfig":"41"},{"size":1459,"mtime":1646818973846,"results":"50","hashOfConfig":"41"},{"size":1508,"mtime":1646846159803,"results":"51","hashOfConfig":"41"},{"size":478,"mtime":1646558344629,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":11012,"mtime":1647620743999,"results":"55","hashOfConfig":"53"},{"size":4026,"mtime":1647622111656,"results":"56","hashOfConfig":"53"},{"size":1113,"mtime":1647610917119,"results":"57","hashOfConfig":"53"},{"size":4509,"mtime":1647610984401,"results":"58","hashOfConfig":"53"},{"size":1459,"mtime":1646818973846,"results":"59","hashOfConfig":"53"},{"size":602,"mtime":1647621706379,"results":"60","hashOfConfig":"53"},{"size":4696,"mtime":1647623713492,"results":"61","hashOfConfig":"53"},{"size":395,"mtime":1646571494473,"results":"62","hashOfConfig":"53"},{"size":1669,"mtime":1647620980971,"results":"63","hashOfConfig":"53"},{"size":3018,"mtime":1647607746588,"results":"64","hashOfConfig":"53"},{"size":2653,"mtime":1647546282333,"results":"65","hashOfConfig":"53"},{"size":89,"mtime":1647606842241,"results":"66","hashOfConfig":"53"},{"size":478,"mtime":1646558344629,"results":"67","hashOfConfig":"68"},{"size":11032,"mtime":1647687228687,"results":"69","hashOfConfig":"68"},{"size":362,"mtime":499162500000,"results":"70","hashOfConfig":"68"},{"size":3038,"mtime":1647687181529,"results":"71","hashOfConfig":"68"},{"size":1113,"mtime":1647610917119,"results":"72","hashOfConfig":"68"},{"size":4046,"mtime":1647689456811,"results":"73","hashOfConfig":"68"},{"size":4509,"mtime":1647610984401,"results":"74","hashOfConfig":"68"},{"size":2673,"mtime":1647687189530,"results":"75","hashOfConfig":"68"},{"size":89,"mtime":1647606842241,"results":"76","hashOfConfig":"68"},{"size":1459,"mtime":1646818973846,"results":"77","hashOfConfig":"68"},{"size":602,"mtime":1647621706379,"results":"78","hashOfConfig":"68"},{"size":395,"mtime":1646571494473,"results":"79","hashOfConfig":"68"},{"size":3197,"mtime":1647768756748,"results":"80","hashOfConfig":"68"},{"size":870,"mtime":1647768902321,"results":"81","hashOfConfig":"68"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3scgjk",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"9vwuqc",{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bwwl02",{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\weather\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\App.js",["208"],[],"C:\\Users\\User\\Desktop\\weather\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Forecast.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\Mynavbar.js",["209"],[],"C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Today.js",["210"],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\TodayInfo.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\Loading.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\PostBar.js",["211"],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\Searchbar.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\WeatherMood.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\index.js",[],[],["212","213"],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\App.js",["214"],[],"import \"./App.css\";\nimport Mynavbar from \"./Components/Mynavbar\";\nimport Today from \"./Pages/Today\";\nimport Forecast from \"./Pages/Forecast\";\nimport SignIn from \"./Components/SignIn\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"bootstrap\";\nimport Axios from \"axios\";\nimport SignUp from \"./Components/SignUp\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport axios from \"axios\";\n\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction App() {\n  const [showToday, setShowToday] = useState(true);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openSignUp, setOpenSignUp] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [authState, setAuthState] = useState(false);\n\n  const [date, setDate] = useState(0);\n  const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n  const [todayWeather, setTodayWeather] = useState({\n    location: \"Taipei\",\n    unit: \"metric\",\n    temp: 0,\n    graph: \"°C\",\n    weather: \"Clear\",\n  });\n  const [forecast, setForecast] = useState({\n    temp: [0, 0, 0, 0],\n    weather: [\"Clear\", \"Clear\", \"Clear\", \"Clear\"],\n    id: [0, 0, 0, 0],\n    location: \"Taipei\",\n  });\n  const [logo, setLogo] = useState({\n    backgroundImage: \"url(/WeatherMood/clearLogo.png)\",\n  });\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/WeatherMood/clear.jpg)\",\n  });\n\n  useEffect(() => {\n    getLocation();\n    getDate();\n    axios\n      .get(\"http://localhost:3001/users/auth\", {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        if (response.data.error) {\n          setAuthState(false);\n        } else {\n          setAuthState(true);\n        }\n      });\n  }, []);\n\n  const getDate = () => {\n    var day = new Date();\n    setDate(day.getDay());\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(getLonandLat);\n    else Alert(\"Geolocation is not supported!\");\n  };\n\n  function getLonandLat(position) {\n    initialWeather(position.coords.longitude, position.coords.latitude);\n    //initialForecast(position.coords.longitude, position.coords.latitude);\n  }\n\n  const initialWeather = (lon, lat) => {\n    // this will render initial page when user get in website for the first time\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n          location: response.data.name,\n        }));\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data.city.name);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  function checkForecastWeather(ID) {\n    //console.log(\"set forecast ID\");\n    setForecast((prevState) => ({\n      ...prevState,\n      id: [ID[0], ID[1], ID[2], ID[3]],\n      weather: [\n        setForecastIcon(ID[0]),\n        setForecastIcon(ID[1]),\n        setForecastIcon(ID[2]),\n        setForecastIcon(ID[3]),\n      ],\n    }));\n  }\n\n  function setForecastIcon(ID) {\n    //console.log(\"set forecast icon\");\n    if (ID >= 200 && ID < 300) return \"Tunderstorm\";\n    else if (ID >= 300 && ID < 600) return \"Rain\";\n    else if (ID >= 600 && ID < 700) return \"Snow\";\n    else if (ID >= 700 && ID < 800) return \"Mist\";\n    else if (ID === 800) return \"Clear\";\n    else return \"Clouds\";\n  }\n\n  const getWeather = () => {\n    //console.log(\"int today.getWeather: \" + unit);\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n        }));\n\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n        getLocation();\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  const checkWeather = (weatherID) => {\n    if (weatherID >= 200 && weatherID < 300) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Thunderstorm\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/thunderstorm.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/thunderstormLogo.png)\" });\n    } else if (weatherID >= 300 && weatherID < 600) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Rain\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/rain.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/rainLogo.png)\" });\n    } else if (weatherID >= 600 && weatherID < 700) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Snow\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/snow.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/snowLogo.png)\" });\n    } else if (weatherID >= 700 && weatherID < 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Mist\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/mist.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/mistLogo.png)\" });\n    } else if (weatherID === 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clear\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/clear.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/clearLogo.png)\" });\n    } else {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clouds\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/cloud.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/cloudLogo.png)\" });\n    }\n  };\n\n  function setLocation(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      location: data,\n    }));\n  }\n\n  function setUnit(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      unit: data,\n    }));\n  }\n\n  return showToday === true ? (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Mynavbar\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          currentUser={currentUser}\n          authState={authState}\n          setShowToday={setShowToday}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n          setCurrentUser={setCurrentUser}\n          setAuthState={setAuthState}\n        />\n\n        {openSignIn === true ? (\n          <SignIn\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n            setCurrentUser={setCurrentUser}\n            setAuthState={setAuthState}\n          />\n        ) : openSignUp === true ? (\n          <SignUp\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n          />\n        ) : (\n          <Today\n            background={background}\n            logo={logo}\n            todayWeather={todayWeather}\n            currentUser={currentUser}\n            getWeather={getWeather}\n            setTodayWeather={setTodayWeather}\n            setLocation={setLocation}\n            setUnit={setUnit}\n          />\n        )}\n      </AuthContext.Provider>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Mynavbar\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          currentUser={currentUser}\n          authState={authState}\n          setShowToday={setShowToday}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n          setCurrentUser={setCurrentUser}\n          setAuthState={setAuthState}\n        />\n\n        {openSignIn === true ? (\n          <SignIn\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n            setCurrentUser={setCurrentUser}\n            setAuthState={setAuthState}\n          />\n        ) : openSignUp === true ? (\n          <SignUp\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n          />\n        ) : (\n          <Forecast\n            todayWeather={todayWeather}\n            date={date}\n            dayList={dayList}\n            forecast={forecast}\n            getWeather={getWeather}\n            setTodayWeather={setTodayWeather}\n            setLocation={setLocation}\n            setUnit={setUnit}\n          />\n        )}\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Mynavbar.js",["215"],[],"import \"../App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction Mynavbar(props) {\r\n  const [showToday, setShowToday] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"use effect: \" + showToday);\r\n    if (showToday) props.setShowToday(true);\r\n    else props.setShowToday(false);\r\n\r\n    axios\r\n      .get(\"http://localhost:3001/users/auth\", {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.username);\r\n        props.setCurrentUser(response.data.username);\r\n      });\r\n  }, []);\r\n\r\n  const handleTodayClick = () => {\r\n    setShowToday(true);\r\n    props.setShowToday(true);\r\n  };\r\n\r\n  const handleForecastClick = () => {\r\n    setShowToday(false);\r\n    props.setShowToday(false);\r\n  };\r\n\r\n  const handleSignInClick = () => {\r\n    props.setOpenSignIn(true);\r\n    props.setOpenSignUp(false);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    props.setOpenSignIn(false);\r\n    props.setOpenSignUp(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    props.setAuthState(false);\r\n    props.setCurrentUser(\"\");\r\n  };\r\n\r\n  let todayFontWeight =\r\n    showToday && !props.openSignIn && !props.openSignUp\r\n      ? { fontWeight: \"bold\" }\r\n      : { fontWeight: \"normal\" };\r\n\r\n  let forecastFontWeight =\r\n    !showToday && !props.openSignIn && !props.openSignUp\r\n      ? { fontWeight: \"bold\" }\r\n      : { fontWeight: \"normal\" };\r\n\r\n  let signInFontWeight = props.openSignIn\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  let signUpFontWeight = props.openSignUp\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" sticky=\"top\" className=\"weatherNavbar sticky-top\">\r\n      <Container>\r\n        <Navbar.Brand>WeatherMood</Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          <div className=\"navbarLinks\">\r\n            <div className=\"navbarLeft\">\r\n              <div\r\n                className=\"navItem\"\r\n                style={todayFontWeight}\r\n                onClick={() => {\r\n                  if (!props.openSignIn && !props.openSignUp)\r\n                    handleTodayClick();\r\n                }}\r\n              >\r\n                Today\r\n              </div>\r\n              <div\r\n                className=\"navItem\"\r\n                style={forecastFontWeight}\r\n                onClick={() => {\r\n                  if (!props.openSignIn && !props.openSignUp)\r\n                    handleForecastClick();\r\n                }}\r\n              >\r\n                Forcast\r\n              </div>\r\n            </div>\r\n            <div className=\"navbarRight\">\r\n              {!props.authState ? (\r\n                <div className=\"SignInAndSignUp\">\r\n                  <div\r\n                    className=\"navItem\"\r\n                    style={signInFontWeight}\r\n                    onClick={() => {\r\n                      handleSignInClick();\r\n                    }}\r\n                  >\r\n                    Sign In\r\n                  </div>\r\n                  <div\r\n                    className=\"navItem\"\r\n                    style={signUpFontWeight}\r\n                    onClick={() => {\r\n                      handleSignUpClick();\r\n                    }}\r\n                  >\r\n                    Sign Up\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"UsernameAndLogout\">\r\n                  <div className=\"Signedusername\">Hi, {props.currentUser}</div>\r\n                  <div\r\n                    className=\"Logout\"\r\n                    onClick={() => {\r\n                      logout();\r\n                    }}\r\n                  >\r\n                    Log out\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Mynavbar;\r\n","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Today.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Forecast.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Searchbar.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Loading.js",["216","217"],[],"import \"../App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Loading(props) {\r\n  const delay = 5000;\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      props.setLoadingVisible(false);\r\n    }, delay);\r\n  }, []);\r\n\r\n  return props.loadingVisible ? (\r\n    <div className=\"Loading\">\r\n      <span>L</span>\r\n      <span>o</span>\r\n      <span>a</span>\r\n      <span>d</span>\r\n      <span>i</span>\r\n      <span>n</span>\r\n      <span>g</span>\r\n      <span>.</span>\r\n      <span>.</span>\r\n      <span>.</span>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\PostBar.js",["218","219","220","221","222","223","224","225","226","227"],[],"import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBoltLightning,\r\n  faCloud,\r\n  faQuestionCircle,\r\n  faSmog,\r\n  faSnowflake,\r\n  faSun,\r\n  faTint,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select from \"react-select\";\r\n\r\nfunction PostBar(props) {\r\n  let today;\r\n\r\n  const [mood, setMood] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setID] = useState(0);\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/posts\").then((response) => {\r\n      //console.log(response.data);\r\n      setMoodList(response.data);\r\n      //console.log(moodList);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelect = (event) => {\r\n    setMood(event.value);\r\n  };\r\n\r\n  const postMood = () => {\r\n    if (content === \"\" || mood === \"Mood\" || mood === \"\") return;\r\n    today = new Date();\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/posts\",\r\n        {\r\n          content: content,\r\n          mood: mood,\r\n          year: today.getFullYear(),\r\n          month: today.getMonth() + 1,\r\n          day: today.getDate(),\r\n          hour: today.getHours(),\r\n          minute: today.getMinutes(),\r\n        },\r\n        {\r\n          headers: {\r\n            accessToken: localStorage.getItem(\"accessToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert(\"Loggin to post!\");\r\n        } else {\r\n          setMoodList([\r\n            ...moodList,\r\n            {\r\n              content: content,\r\n              mood: mood,\r\n              id: id,\r\n              year: today.getFullYear(),\r\n              month: today.getMonth() + 1,\r\n              day: today.getDate(),\r\n              hour: today.getHours(),\r\n              minute: today.getMinutes(),\r\n              username: response.data.username,\r\n            },\r\n          ]);\r\n\r\n          setContent(\"\");\r\n          setMood(\"\");\r\n          setID(id + 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deletePost = (ID) => {\r\n    axios.delete(`http://localhost:3001/posts/${ID}`).then(() => {\r\n      console.log(\"remove the post\");\r\n      const newList = moodList;\r\n      const updateList = newList.filter((item) => item.id !== ID);\r\n\r\n      setMoodList(updateList);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        {/*<Select\r\n          placeholder={defaultMood.label}\r\n          options={options}\r\n          className=\"PostBarMood\"\r\n          isSearchable={false}\r\n          onChange={handleSelect}\r\n        />*/}\r\n        <select\r\n          className=\"PostBarMood\"\r\n          defaultValue={\"DEFAULT\"}\r\n          onChange={handleSelect}\r\n        >\r\n          <option disabled value=\"DEFAULT\" hidden className=\"moodSelectDefault\">\r\n            Mood?\r\n          </option>\r\n          <option value=\"Clear\" className=\"moodSelector\">\r\n            Clear\r\n          </option>\r\n          <option value=\"Cloud\" className=\"moodSelector\">\r\n            Cloud\r\n          </option>\r\n          <option value=\"Thunder\" className=\"moodSelector\">\r\n            Thunder\r\n          </option>\r\n          <option value=\"Rain\" className=\"moodSelector\">\r\n            Rain\r\n          </option>\r\n          <option value=\"Mist\" className=\"moodSelector\">\r\n            Mist\r\n          </option>\r\n          <option value=\"Snow\" className=\"moodSelector\">\r\n            Snow\r\n          </option>\r\n        </select>\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {moodList.map((moodList, index) => {\r\n          return (\r\n            <WeatherMood\r\n              username={moodList.username}\r\n              currentUser={props.currentUser}\r\n              content={moodList.content}\r\n              mood={moodList.mood}\r\n              id={moodList.id}\r\n              year={moodList.year}\r\n              month={moodList.month}\r\n              day={moodList.day}\r\n              hour={moodList.hour}\r\n              minute={moodList.minute}\r\n              key={index}\r\n              deletePost={deletePost}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\TodayInfo.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\WeatherMood.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignIn.js",["228"],[],"import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nfunction SignIn(props) {\r\n  const { setAuthState } = useContext(AuthContext);\r\n\r\n  const handleLeaveClick = () => {\r\n    props.setOpenSignIn(false);\r\n    props.setOpenSignUp(false);\r\n  };\r\n\r\n  const initialValue = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().min(3).max(15).required(),\r\n    password: Yup.string().min(3).max(15).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"http://localhost:3001/users/signin\", data)\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert(response.data.error);\r\n        } else {\r\n          localStorage.setItem(\"accessToken\", response.data[1]);\r\n          props.setAuthState(true);\r\n          props.setCurrentUser(response.data[0]);\r\n          handleLeaveClick();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Wrong Username or Password!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Sign\">\r\n      <Formik\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"SignArea\">\r\n          <ErrorMessage\r\n            name=\"username\"\r\n            component=\"span\"\r\n            className=\"SignErrorMessage\"\r\n          />\r\n          <Field\r\n            className=\"SignUsername\"\r\n            name=\"username\"\r\n            placeholder=\"Username...\"\r\n            autoComplete=\"off\"\r\n          ></Field>\r\n          <ErrorMessage\r\n            name=\"password\"\r\n            component=\"span\"\r\n            className=\"SignErrorMessage\"\r\n          />\r\n          <Field\r\n            className=\"SignPassword\"\r\n            name=\"password\"\r\n            placeholder=\"Password...\"\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n          ></Field>\r\n          <div className=\"SignButtons\">\r\n            <button type=\"submit\">Sign In</button>\r\n            <button\r\n              onClick={() => {\r\n                handleLeaveClick();\r\n              }}\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n\r\n      {/*<div className=\"SignArea\">\r\n        <button\r\n          className=\"SignLeave\"\r\n          onClick={() => {\r\n            handleLeaveClick();\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n        <input className=\"SignUsername\" placeholder=\"Username...\"></input>\r\n        <input className=\"SignPassword\" placeholder=\"Password...\"></input>\r\n        <div className=\"SignButtons\">\r\n          <button\r\n            onClick={() => {\r\n              props.setOpenSignIn(false);\r\n            }}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </div>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignUp.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\helpers\\AuthContext.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\App.js",["229"],[],"import \"./App.css\";\nimport Mynavbar from \"./Components/Mynavbar\";\nimport Today from \"./Pages/Today\";\nimport Forecast from \"./Pages/Forecast\";\nimport SignIn from \"./Components/SignIn\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"bootstrap\";\nimport Axios from \"axios\";\nimport SignUp from \"./Components/SignUp\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport axios from \"axios\";\n\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction App() {\n  const [showToday, setShowToday] = useState(true);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openSignUp, setOpenSignUp] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [authState, setAuthState] = useState(false);\n\n  const [date, setDate] = useState(0);\n  const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n  const [todayWeather, setTodayWeather] = useState({\n    location: \"Taipei\",\n    unit: \"metric\",\n    temp: 0,\n    graph: \"°C\",\n    weather: \"Clear\",\n  });\n  const [forecast, setForecast] = useState({\n    temp: [0, 0, 0, 0],\n    weather: [\"Clear\", \"Clear\", \"Clear\", \"Clear\"],\n    id: [0, 0, 0, 0],\n    location: \"Taipei\",\n  });\n  const [logo, setLogo] = useState({\n    backgroundImage: \"url(/WeatherMood/clearLogo.png)\",\n  });\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/WeatherMood/clear.jpg)\",\n  });\n\n  useEffect(() => {\n    getLocation();\n    getDate();\n    axios\n      .get(\"https://weather-mood-server.herokuapp.com/users/auth\", {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        if (response.data.error) {\n          setAuthState(false);\n        } else {\n          setAuthState(true);\n        }\n      });\n  }, []);\n\n  const getDate = () => {\n    var day = new Date();\n    setDate(day.getDay());\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(getLonandLat);\n    else Alert(\"Geolocation is not supported!\");\n  };\n\n  function getLonandLat(position) {\n    initialWeather(position.coords.longitude, position.coords.latitude);\n    //initialForecast(position.coords.longitude, position.coords.latitude);\n  }\n\n  const initialWeather = (lon, lat) => {\n    // this will render initial page when user get in website for the first time\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n          location: response.data.name,\n        }));\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data.city.name);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  function checkForecastWeather(ID) {\n    //console.log(\"set forecast ID\");\n    setForecast((prevState) => ({\n      ...prevState,\n      id: [ID[0], ID[1], ID[2], ID[3]],\n      weather: [\n        setForecastIcon(ID[0]),\n        setForecastIcon(ID[1]),\n        setForecastIcon(ID[2]),\n        setForecastIcon(ID[3]),\n      ],\n    }));\n  }\n\n  function setForecastIcon(ID) {\n    //console.log(\"set forecast icon\");\n    if (ID >= 200 && ID < 300) return \"Tunderstorm\";\n    else if (ID >= 300 && ID < 600) return \"Rain\";\n    else if (ID >= 600 && ID < 700) return \"Snow\";\n    else if (ID >= 700 && ID < 800) return \"Mist\";\n    else if (ID === 800) return \"Clear\";\n    else return \"Clouds\";\n  }\n\n  const getWeather = () => {\n    //console.log(\"int today.getWeather: \" + unit);\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n        }));\n\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n        getLocation();\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  const checkWeather = (weatherID) => {\n    if (weatherID >= 200 && weatherID < 300) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Thunderstorm\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/thunderstorm.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/thunderstormLogo.png)\" });\n    } else if (weatherID >= 300 && weatherID < 600) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Rain\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/rain.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/rainLogo.png)\" });\n    } else if (weatherID >= 600 && weatherID < 700) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Snow\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/snow.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/snowLogo.png)\" });\n    } else if (weatherID >= 700 && weatherID < 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Mist\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/mist.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/mistLogo.png)\" });\n    } else if (weatherID === 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clear\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/clear.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/clearLogo.png)\" });\n    } else {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clouds\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/cloud.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/cloudLogo.png)\" });\n    }\n  };\n\n  function setLocation(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      location: data,\n    }));\n  }\n\n  function setUnit(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      unit: data,\n    }));\n  }\n\n  return showToday === true ? (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Mynavbar\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          currentUser={currentUser}\n          authState={authState}\n          setShowToday={setShowToday}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n          setCurrentUser={setCurrentUser}\n          setAuthState={setAuthState}\n        />\n\n        {openSignIn === true ? (\n          <SignIn\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n            setCurrentUser={setCurrentUser}\n            setAuthState={setAuthState}\n          />\n        ) : openSignUp === true ? (\n          <SignUp\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n          />\n        ) : (\n          <Today\n            background={background}\n            logo={logo}\n            todayWeather={todayWeather}\n            currentUser={currentUser}\n            getWeather={getWeather}\n            setTodayWeather={setTodayWeather}\n            setLocation={setLocation}\n            setUnit={setUnit}\n          />\n        )}\n      </AuthContext.Provider>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Mynavbar\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          currentUser={currentUser}\n          authState={authState}\n          setShowToday={setShowToday}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n          setCurrentUser={setCurrentUser}\n          setAuthState={setAuthState}\n        />\n\n        {openSignIn === true ? (\n          <SignIn\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n            setCurrentUser={setCurrentUser}\n            setAuthState={setAuthState}\n          />\n        ) : openSignUp === true ? (\n          <SignUp\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n          />\n        ) : (\n          <Forecast\n            todayWeather={todayWeather}\n            date={date}\n            dayList={dayList}\n            forecast={forecast}\n            getWeather={getWeather}\n            setTodayWeather={setTodayWeather}\n            setLocation={setLocation}\n            setUnit={setUnit}\n          />\n        )}\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\SignIn.js",["230"],[],"import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nfunction SignIn(props) {\r\n  const { setAuthState } = useContext(AuthContext);\r\n\r\n  const handleLeaveClick = () => {\r\n    props.setOpenSignIn(false);\r\n    props.setOpenSignUp(false);\r\n  };\r\n\r\n  const initialValue = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().min(3).max(15).required(),\r\n    password: Yup.string().min(3).max(15).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"https://weather-mood-server.herokuapp.com/users/signin\", data)\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert(response.data.error);\r\n        } else {\r\n          localStorage.setItem(\"accessToken\", response.data[1]);\r\n          props.setAuthState(true);\r\n          props.setCurrentUser(response.data[0]);\r\n          handleLeaveClick();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Wrong Username or Password!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Sign\">\r\n      <Formik\r\n        initialValues={initialValue}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"SignArea\">\r\n          <ErrorMessage\r\n            name=\"username\"\r\n            component=\"span\"\r\n            className=\"SignErrorMessage\"\r\n          />\r\n          <Field\r\n            className=\"SignUsername\"\r\n            name=\"username\"\r\n            placeholder=\"Username...\"\r\n            autoComplete=\"off\"\r\n          ></Field>\r\n          <ErrorMessage\r\n            name=\"password\"\r\n            component=\"span\"\r\n            className=\"SignErrorMessage\"\r\n          />\r\n          <Field\r\n            className=\"SignPassword\"\r\n            name=\"password\"\r\n            placeholder=\"Password...\"\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n          ></Field>\r\n          <div className=\"SignButtons\">\r\n            <button type=\"submit\">Sign In</button>\r\n            <button\r\n              onClick={() => {\r\n                handleLeaveClick();\r\n              }}\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n\r\n      {/*<div className=\"SignArea\">\r\n        <button\r\n          className=\"SignLeave\"\r\n          onClick={() => {\r\n            handleLeaveClick();\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n        <input className=\"SignUsername\" placeholder=\"Username...\"></input>\r\n        <input className=\"SignPassword\" placeholder=\"Password...\"></input>\r\n        <div className=\"SignButtons\">\r\n          <button\r\n            onClick={() => {\r\n              props.setOpenSignIn(false);\r\n            }}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </div>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Pages\\Today.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\Mynavbar.js",["231"],[],"import \"../App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction Mynavbar(props) {\r\n  const [showToday, setShowToday] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"use effect: \" + showToday);\r\n    if (showToday) props.setShowToday(true);\r\n    else props.setShowToday(false);\r\n\r\n    axios\r\n      .get(\"https://weather-mood-server.herokuapp.com/users/auth\", {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.username);\r\n        props.setCurrentUser(response.data.username);\r\n      });\r\n  }, []);\r\n\r\n  const handleTodayClick = () => {\r\n    setShowToday(true);\r\n    props.setShowToday(true);\r\n  };\r\n\r\n  const handleForecastClick = () => {\r\n    setShowToday(false);\r\n    props.setShowToday(false);\r\n  };\r\n\r\n  const handleSignInClick = () => {\r\n    props.setOpenSignIn(true);\r\n    props.setOpenSignUp(false);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    props.setOpenSignIn(false);\r\n    props.setOpenSignUp(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    props.setAuthState(false);\r\n    props.setCurrentUser(\"\");\r\n  };\r\n\r\n  let todayFontWeight =\r\n    showToday && !props.openSignIn && !props.openSignUp\r\n      ? { fontWeight: \"bold\" }\r\n      : { fontWeight: \"normal\" };\r\n\r\n  let forecastFontWeight =\r\n    !showToday && !props.openSignIn && !props.openSignUp\r\n      ? { fontWeight: \"bold\" }\r\n      : { fontWeight: \"normal\" };\r\n\r\n  let signInFontWeight = props.openSignIn\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  let signUpFontWeight = props.openSignUp\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" sticky=\"top\" className=\"weatherNavbar sticky-top\">\r\n      <Container>\r\n        <Navbar.Brand>WeatherMood</Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          <div className=\"navbarLinks\">\r\n            <div className=\"navbarLeft\">\r\n              <div\r\n                className=\"navItem\"\r\n                style={todayFontWeight}\r\n                onClick={() => {\r\n                  if (!props.openSignIn && !props.openSignUp)\r\n                    handleTodayClick();\r\n                }}\r\n              >\r\n                Today\r\n              </div>\r\n              <div\r\n                className=\"navItem\"\r\n                style={forecastFontWeight}\r\n                onClick={() => {\r\n                  if (!props.openSignIn && !props.openSignUp)\r\n                    handleForecastClick();\r\n                }}\r\n              >\r\n                Forcast\r\n              </div>\r\n            </div>\r\n            <div className=\"navbarRight\">\r\n              {!props.authState ? (\r\n                <div className=\"SignInAndSignUp\">\r\n                  <div\r\n                    className=\"navItem\"\r\n                    style={signInFontWeight}\r\n                    onClick={() => {\r\n                      handleSignInClick();\r\n                    }}\r\n                  >\r\n                    Sign In\r\n                  </div>\r\n                  <div\r\n                    className=\"navItem\"\r\n                    style={signUpFontWeight}\r\n                    onClick={() => {\r\n                      handleSignUpClick();\r\n                    }}\r\n                  >\r\n                    Sign Up\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"UsernameAndLogout\">\r\n                  <div className=\"Signedusername\">Hi, {props.currentUser}</div>\r\n                  <div\r\n                    className=\"Logout\"\r\n                    onClick={() => {\r\n                      logout();\r\n                    }}\r\n                  >\r\n                    Log out\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Mynavbar;\r\n","C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Pages\\Forecast.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\SignUp.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\helpers\\AuthContext.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\Searchbar.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\Loading.js",["232","233"],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\TodayInfo.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\PostBar.js",[],[],"C:\\Users\\User\\Desktop\\Weather-Mood-Client\\src\\Components\\WeatherMood.js",[],[],{"ruleId":"234","severity":1,"message":"235","line":40,"column":6,"nodeType":"236","endLine":40,"endColumn":8,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":3,"column":34,"nodeType":"240","messageId":"241","endLine":3,"endColumn":41},{"ruleId":"238","severity":1,"message":"242","line":6,"column":17,"nodeType":"240","messageId":"241","endLine":6,"endColumn":25},{"ruleId":"238","severity":1,"message":"243","line":3,"column":27,"nodeType":"240","messageId":"241","endLine":3,"endColumn":36},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"234","severity":1,"message":"235","line":59,"column":6,"nodeType":"236","endLine":59,"endColumn":8,"suggestions":"248"},{"ruleId":"234","severity":1,"message":"249","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":8,"suggestions":"250"},{"ruleId":"238","severity":1,"message":"242","line":2,"column":28,"nodeType":"240","messageId":"241","endLine":2,"endColumn":36},{"ruleId":"234","severity":1,"message":"251","line":11,"column":6,"nodeType":"236","endLine":11,"endColumn":8,"suggestions":"252"},{"ruleId":"238","severity":1,"message":"253","line":3,"column":17,"nodeType":"240","messageId":"241","endLine":3,"endColumn":25},{"ruleId":"238","severity":1,"message":"254","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":25},{"ruleId":"238","severity":1,"message":"255","line":7,"column":3,"nodeType":"240","messageId":"241","endLine":7,"endColumn":18},{"ruleId":"238","severity":1,"message":"256","line":8,"column":3,"nodeType":"240","messageId":"241","endLine":8,"endColumn":10},{"ruleId":"238","severity":1,"message":"257","line":9,"column":3,"nodeType":"240","messageId":"241","endLine":9,"endColumn":19},{"ruleId":"238","severity":1,"message":"258","line":10,"column":3,"nodeType":"240","messageId":"241","endLine":10,"endColumn":9},{"ruleId":"238","severity":1,"message":"259","line":11,"column":3,"nodeType":"240","messageId":"241","endLine":11,"endColumn":14},{"ruleId":"238","severity":1,"message":"260","line":12,"column":3,"nodeType":"240","messageId":"241","endLine":12,"endColumn":8},{"ruleId":"238","severity":1,"message":"261","line":13,"column":3,"nodeType":"240","messageId":"241","endLine":13,"endColumn":9},{"ruleId":"238","severity":1,"message":"262","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":14},{"ruleId":"238","severity":1,"message":"263","line":9,"column":11,"nodeType":"240","messageId":"241","endLine":9,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":59,"column":6,"nodeType":"236","endLine":59,"endColumn":8,"suggestions":"264"},{"ruleId":"238","severity":1,"message":"263","line":9,"column":11,"nodeType":"240","messageId":"241","endLine":9,"endColumn":23},{"ruleId":"234","severity":1,"message":"249","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":8,"suggestions":"265"},{"ruleId":"238","severity":1,"message":"242","line":2,"column":28,"nodeType":"240","messageId":"241","endLine":2,"endColumn":36},{"ruleId":"234","severity":1,"message":"251","line":11,"column":6,"nodeType":"236","endLine":11,"endColumn":8,"suggestions":"266"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["267"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["268"],"no-negated-in-lhs",["269"],["270"],"React Hook useEffect has missing dependencies: 'props' and 'showToday'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["271"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["272"],"'Fragment' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faBoltLightning' is defined but never used.","'faCloud' is defined but never used.","'faQuestionCircle' is defined but never used.","'faSmog' is defined but never used.","'faSnowflake' is defined but never used.","'faSun' is defined but never used.","'faTint' is defined but never used.","'Select' is defined but never used.","'setAuthState' is assigned a value but never used.",["273"],["274"],["275"],{"desc":"276","fix":"277"},"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"276","fix":"283"},{"desc":"279","fix":"284"},{"desc":"281","fix":"285"},"Update the dependencies array to be: [getLocation]",{"range":"286","text":"287"},{"range":"288","text":"287"},"Update the dependencies array to be: [props, showToday]",{"range":"289","text":"290"},"Update the dependencies array to be: [props]",{"range":"291","text":"292"},{"range":"293","text":"287"},{"range":"294","text":"290"},{"range":"295","text":"292"},[1082,1084],"[getLocation]",[1763,1765],[692,694],"[props, showToday]",[234,236],"[props]",[1783,1785],[712,714],[234,236]]