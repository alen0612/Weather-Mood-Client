{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/Desktop/Weather-Mood-Client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/User/Desktop/Weather-Mood-Client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import WeatherMood from\"./WeatherMood\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostBar(props){var today;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),id=_useState4[0],setID=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),moodList=_useState6[0],setMoodList=_useState6[1];useEffect(function(){axios.get(\"https://weather-mood-server.herokuapp.com/posts\").then(function(response){console.log(response);setMoodList(response.data);//console.log(moodList);\n});},[]);var postMood=function postMood(){if(content===\"\")return;today=new Date();axios.post(\"https://weather-mood-server.herokuapp.com/posts\",{content:content,year:today.getFullYear(),month:today.getMonth()+1,day:today.getDate(),hour:today.getHours(),minute:today.getMinutes()},{headers:{accessToken:localStorage.getItem(\"accessToken\")}}).then(function(response){if(response.data.error){alert(\"Loggin to post!\");}else{setMoodList([].concat(_toConsumableArray(moodList),[{content:content,id:id,year:today.getFullYear(),month:today.getMonth()+1,day:today.getDate(),hour:today.getHours(),minute:today.getMinutes(),username:response.data.username}]));setContent(\"\");setID(id+1);}});};var deletePost=function deletePost(ID){axios.delete(\"https://weather-mood-server.herokuapp.com/posts/\".concat(ID)).then(function(){console.log(\"remove the post\");var newList=moodList;var updateList=newList.filter(function(item){return item.id!==ID;});setMoodList(updateList);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"PostBar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"PostBarInput\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"PostBarContent\",placeholder:\"What's on your mind?\",value:content,onChange:function onChange(event){setContent(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"PostBarButton\",onClick:postMood,children:\"Post\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarSpace\"}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarOutput\",children:moodList.map(function(moodList,index){return/*#__PURE__*/_jsx(WeatherMood,{username:moodList.username,currentUser:props.currentUser,content:moodList.content,id:moodList.id,year:moodList.year,month:moodList.month,day:moodList.day,hour:moodList.hour,minute:moodList.minute,deletePost:deletePost},index);})})]});}export default PostBar;","map":{"version":3,"sources":["C:/Users/User/Desktop/Weather-Mood-Client/src/Components/PostBar.js"],"names":["WeatherMood","React","useState","useEffect","axios","PostBar","props","today","content","setContent","id","setID","moodList","setMoodList","get","then","response","console","log","data","postMood","Date","post","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","headers","accessToken","localStorage","getItem","error","alert","username","deletePost","ID","delete","newList","updateList","filter","item","event","target","value","map","index","currentUser"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction PostBar(props) {\r\n  let today;\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setID] = useState(0);\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://weather-mood-server.herokuapp.com/posts\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setMoodList(response.data);\r\n        //console.log(moodList);\r\n      });\r\n  }, []);\r\n\r\n  const postMood = () => {\r\n    if (content === \"\") return;\r\n    today = new Date();\r\n\r\n    axios\r\n      .post(\r\n        \"https://weather-mood-server.herokuapp.com/posts\",\r\n        {\r\n          content: content,\r\n          year: today.getFullYear(),\r\n          month: today.getMonth() + 1,\r\n          day: today.getDate(),\r\n          hour: today.getHours(),\r\n          minute: today.getMinutes(),\r\n        },\r\n        {\r\n          headers: {\r\n            accessToken: localStorage.getItem(\"accessToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert(\"Loggin to post!\");\r\n        } else {\r\n          setMoodList([\r\n            ...moodList,\r\n            {\r\n              content: content,\r\n              id: id,\r\n              year: today.getFullYear(),\r\n              month: today.getMonth() + 1,\r\n              day: today.getDate(),\r\n              hour: today.getHours(),\r\n              minute: today.getMinutes(),\r\n              username: response.data.username,\r\n            },\r\n          ]);\r\n\r\n          setContent(\"\");\r\n          setID(id + 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deletePost = (ID) => {\r\n    axios\r\n      .delete(`https://weather-mood-server.herokuapp.com/posts/${ID}`)\r\n      .then(() => {\r\n        console.log(\"remove the post\");\r\n        const newList = moodList;\r\n        const updateList = newList.filter((item) => item.id !== ID);\r\n\r\n        setMoodList(updateList);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {moodList.map((moodList, index) => {\r\n          return (\r\n            <WeatherMood\r\n              username={moodList.username}\r\n              currentUser={props.currentUser}\r\n              content={moodList.content}\r\n              id={moodList.id}\r\n              year={moodList.year}\r\n              month={moodList.month}\r\n              day={moodList.day}\r\n              hour={moodList.hour}\r\n              minute={moodList.minute}\r\n              key={index}\r\n              deletePost={deletePost}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n"]},"metadata":{},"sourceType":"module"}